# Generated by Django 3.1.8 on 2021-05-24 23:38

import address.models
from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import phonenumber_field.modelfields
import wagtail.core.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0060_fix_workflow_unique_constraint'),
        ('address', '0003_auto_20200830_1851'),
        ('wagtailimages', '0023_add_choose_permissions'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='APIResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('source', models.CharField(blank=True, max_length=255)),
                ('data', models.JSONField()),
                ('model', models.CharField(blank=True, max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Contact_Card',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('details', models.JSONField(null=True, verbose_name='Contact Card')),
                ('first_name', models.CharField(max_length=255, verbose_name='First name')),
                ('last_name', models.CharField(max_length=255, verbose_name='Last name')),
                ('email', models.EmailField(max_length=254, null=True)),
                ('office_phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, null=True, region=None)),
                ('cell_phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, null=True, region=None)),
                ('account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='account', to=settings.AUTH_USER_MODEL)),
                ('address', address.models.AddressField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='address.address')),
            ],
        ),
        migrations.CreateModel(
            name='EntityPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('priority_slug', models.BooleanField(blank=True, null=True, verbose_name='Select if this page should be a top level slug for the site regardless of how deeply nested it is. Only do this for pages that should be easily accessible and have unique slugs.')),
                ('introduction', models.TextField(blank=True, help_text='Text to describe the page')),
                ('body', wagtail.core.fields.RichTextField(blank=True)),
                ('website', models.URLField(blank=True, default='')),
                ('social', models.JSONField(blank=True, verbose_name='Social media accounts')),
                ('data', models.JSONField(blank=True, null=True)),
                ('address', address.models.AddressField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='address.address')),
                ('contacts', modelcluster.fields.ParentalManyToManyField(blank=True, related_name='representing', to='cartomancer.Contact_Card')),
                ('hero', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='AirBnBPage',
            fields=[
                ('entitypage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cartomancer.entitypage')),
            ],
            options={
                'abstract': False,
            },
            bases=('cartomancer.entitypage',),
        ),
        migrations.CreateModel(
            name='Location_Pin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coords', django.contrib.gis.db.models.fields.PointField(blank=True, default='POINT(-93.29067081212997 37.230544082999714)', geography=True, null=True, srid=4326)),
                ('plus', models.CharField(blank=True, max_length=20)),
                ('address', address.models.AddressField(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='address.address')),
            ],
        ),
        migrations.AddField(
            model_name='entitypage',
            name='map',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='entities', to='cartomancer.location_pin'),
        ),
        migrations.CreateModel(
            name='EntityOperatingHours',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('day', models.CharField(choices=[('MON', 'Monday'), ('TUES', 'Tuesday'), ('WED', 'Wednesday'), ('THUR', 'Thursday'), ('FRI', 'Friday'), ('SAT', 'Saturday'), ('SUN', 'Sunday')], default='MON', max_length=4)),
                ('opening_time', models.TimeField(blank=True, null=True)),
                ('closing_time', models.TimeField(blank=True, null=True)),
                ('closed', models.BooleanField(blank=True, help_text='Tick if entity is closed on this day', verbose_name='Closed?')),
                ('entity', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='hours_of_operation', to='cartomancer.entitypage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EntitiesIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('priority_slug', models.BooleanField(blank=True, null=True, verbose_name='Select if this page should be a top level slug for the site regardless of how deeply nested it is. Only do this for pages that should be easily accessible and have unique slugs.')),
                ('introduction', models.TextField(blank=True, help_text='Text to describe the page')),
                ('hero', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
    ]
